# Generated by Django 4.2.24 on 2025-09-09 15:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('mapper', '0005_auto_20250909_2114'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_number', models.CharField(max_length=20, unique=True)),
                ('capacity', models.IntegerField(default=50)),
            ],
            options={
                'verbose_name': 'Bus',
                'verbose_name_plural': 'Buses',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('department_head_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('zk_uid', models.CharField(blank=True, max_length=30, null=True)),
                ('zk_department_code', models.CharField(blank=True, default=uuid.uuid4, max_length=50, null=True)),
                ('parent_department', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Hostel_Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_floors', models.IntegerField(blank=True, default=0, null=True)),
                ('block_name', models.CharField(max_length=15, unique=True)),
                ('block_type', models.CharField(choices=[('WH', "Women's Hostel"), ('MH', "Men's Hostel")], max_length=25)),
                ('maintenance', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Hostel Block',
                'verbose_name_plural': 'Hostel Blocks',
            },
        ),
        migrations.CreateModel(
            name='Hostel_Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_no', models.CharField(max_length=30, null=True)),
                ('maintenance', models.BooleanField(default=False)),
                ('no_of_rooms', models.IntegerField(blank=True, null=True)),
                ('no_of_dorms', models.IntegerField(blank=True, null=True)),
                ('no_of_rooms_occupied', models.IntegerField(blank=True, null=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.hostel_block')),
            ],
            options={
                'verbose_name': 'Hostel Floor',
                'verbose_name_plural': 'Hostel Floors',
            },
        ),
        migrations.CreateModel(
            name='Hostel_Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.CharField(blank=True, max_length=10, null=True)),
                ('room_type', models.CharField(blank=True, choices=[('4-sharing', '4-Sharing'), ('Dorm', 'Dorm')], max_length=25, null=True)),
                ('room_capacity', models.IntegerField(blank=True, null=True)),
                ('maintenance', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('not_available_reason', models.TextField(blank=True, null=True)),
                ('no_of_students_occupied', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.hostel_floor')),
            ],
            options={
                'verbose_name': 'Hostel Room',
                'verbose_name_plural': 'Hostel Rooms',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Institution',
                'verbose_name_plural': 'Institutions',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_name', models.CharField(max_length=100)),
                ('route_code', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'User Group',
                'verbose_name_plural': 'User Groups',
            },
        ),
        migrations.CreateModel(
            name='UserRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Full name of the user', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, help_text='Phone number', max_length=20, null=True)),
                ('uid', models.CharField(blank=True, default='Not_Set', help_text='Unique identifier', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='Primary email address', max_length=254, null=True, unique=True)),
                ('assigned_head', models.CharField(blank=True, help_text='Assigned head/supervisor', max_length=50, null=True)),
                ('is_data_validated', models.BooleanField(default=False, help_text='Has the data been validated?')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('hostel_admin_type', models.CharField(blank=True, max_length=50, null=True)),
                ('admission_type', models.CharField(blank=True, choices=[('REGULAR', 'REGULAR'), ('LATERAL', 'LATERAL')], max_length=20)),
                ('year_of_study', models.CharField(blank=True, help_text='Current year of study', max_length=15, null=True)),
                ('residence', models.CharField(blank=True, choices=[('Hostel', 'HOSTELER'), ('Dayscholar', 'DAYSCHOLAR')], default=None, max_length=20, null=True)),
                ('parent_phone_number', models.CharField(blank=True, help_text="Parent's phone number", max_length=20, null=True)),
                ('parent_phone_number2', models.CharField(blank=True, help_text='Secondary parent phone', max_length=15, null=True)),
                ('address', models.TextField(blank=True, help_text='Home address', null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('A1B+', 'A1B'), ('A1+', 'A1+'), ('A1B-', 'A1B-'), ('A1-', 'A1-'), ('A2+', 'A2+')], max_length=10, null=True)),
                ('Title', models.CharField(blank=True, help_text='Professional title', max_length=70, null=True)),
                ('type', models.CharField(blank=True, choices=[('HR', 'HR'), ('Security Admin', 'Security Admin'), ('Department Head', 'Department Head'), ('Sub Admin', 'Sub Admin'), ('External Sub Admin', 'External Sub Admin'), ('Normal', 'Normal'), ('Hostel Admin', 'Hostel Admin'), ('Avenue Admin', 'Avenue Admin'), ('Physical Department', 'Physical Department')], default='Normal', max_length=20, null=True)),
                ('category', models.CharField(blank=True, choices=[('Academic', 'Academic'), ('Teaching', 'Teaching'), ('Academic Support', 'Academic Support'), ('Admin', 'Admin'), ('External', 'External'), ('Guest', 'Guest')], max_length=20, null=True)),
                ('sub_category', models.CharField(blank=True, choices=[('Transport', 'College Transport'), ('Own', 'Own Transport'), ('Student', 'Student'), ('Others', 'Others'), ('Nil', 'Nil')], default='Nil', max_length=20, null=True)),
                ('is_blocked', models.BooleanField(default=False, help_text='Is the user blocked?')),
                ('temp_rollno', models.CharField(blank=True, help_text='Temporary roll number', max_length=10, null=True)),
                ('personal_mail_id', models.EmailField(blank=True, help_text='Personal email address', max_length=254, null=True)),
                ('aadhar_no', models.BigIntegerField(blank=True, help_text='Aadhar number', null=True)),
                ('current_address', models.TextField(blank=True, help_text='Current address', null=True)),
                ('photo', models.FileField(blank=True, default='../media/userPhotos/userPhoto.png', null=True, upload_to='')),
                ('shortrange_RFID', models.CharField(blank=True, max_length=20, null=True)),
                ('longrange_RFID', models.CharField(blank=True, max_length=20, null=True)),
                ('fingerprints', models.JSONField(blank=True, null=True)),
                ('biometric_uid', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, default='', max_length=128)),
                ('biometric_photo', models.JSONField(blank=True, null=True)),
                ('canApply', models.BooleanField(blank=True, default=True, null=True)),
                ('others', models.JSONField(blank=True, null=True)),
                ('id_proof', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('auto_approve', models.BooleanField(blank=True, default=False, null=True)),
                ('auto_tag', models.EmailField(blank=True, max_length=254, null=True)),
                ('bus_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.bus')),
                ('bus_route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.route')),
                ('bus_stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.location')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.department')),
                ('hostel_block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.hostel_block')),
                ('hostel_room_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.hostel_room')),
                ('institution_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mapper.institution')),
                ('permissions', models.ManyToManyField(blank=True, to='mapper.permission')),
                ('user_groups', models.ManyToManyField(blank=True, to='mapper.usergroup')),
            ],
            options={
                'verbose_name': 'User Record',
                'verbose_name_plural': 'User Records',
            },
        ),
        migrations.AddField(
            model_name='hostel_room',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.institution'),
        ),
        migrations.AddField(
            model_name='department',
            name='Institution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.institution'),
        ),
        migrations.AddField(
            model_name='bus',
            name='route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.route'),
        ),
    ]
